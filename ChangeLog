2002-07-24  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/pass_skels.cc: activate servants the first
	time _this() is called

	* src/idl-compiler/cpp/types/IDLInterface.cc (stub_impl_arg_pre):
	Check for NULL-ness of input arguments before unwrapping them

2002-07-23  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/pass_skels.cc: in POA_Obj::_this(), use
	POA::servant_to_id instead of activate_object, to allow multiple
	calls to _this()

2002-07-21  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/types/IDLUnion.cc: Implemented IN
	parameters (both skels and stubs). Bonobomm can now be compiled
	without any manual fidgeting!

	* src/idl-compiler/cpp/pass_xlate.cc (union_create_members): wrote
	packer and unpacker

2002-07-20  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/types/IDLString.cc (typedef_decl_write):
	the correct smartptr name is CORBA::String_var, and not CORBA::string_var

	* src/idl-compiler/cpp/types/IDLSimpleType.cc (const_decl_write):
	Added missing space between constant's type and name

	* src/orb-cpp/orbitcpp_sequence.hh: Rewrote the traits stuff to
	use inner classes for traits when dealing with compound types

2002-07-13  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/pass_gather.cc (doOperation): Print a
	warning when the definition of an exception to be raised is not
	found in memory

	* src/orb-cpp/orbitcpp_typecode.hh (_orbitcpp_wrap): new method to
	wrap a CORBA_TypeCode in a C++ object

	* src/orb-cpp/orbitcpp_any.h:: Made consistent with other wrappers
	and cleaned up reinterpret_cast<> black magic

	* src/orb-cpp/orbitcpp_sequence.hh: Duplicated a bunch of typedefs
	in subclasses to surpress GCC 3.1 warnings

2002-07-09  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/orb-cpp/orbitcpp_sequence.hh: Made single-argument
	constructors explicit

2002-06-29  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/types/IDLInterface.cc
	(get_seq_traits_typename): Override default implementation from
	IDLType as that would mangle _mgr in the traits name

	* src/orb-cpp/orbitcpp_smartptr.hh: Removed a bunch of
	suspicious-looking reinterpret_cast<>s

	* src/idl-compiler/orbit-idl-c-stubs.c (cs_small_output_stub):
	Cast EPV from void* to correct type before assigning it to the
	local temporary EPV pointer

	* src/idl-compiler/orbit-idl-driver.c: s/namespace/ns/

	* src/idl-compiler/cpp:
	* src/orb-cpp: GCC 3.1 fixes

2002-06-24  Murray Cumming  <murrayc@usa.net>

	* I had not properly restored the -lc++ command - just the -lcpp
	command that does the same thing.

2002-06-18  Murray Cumming  <murrayc@usa.net>
	
	* src/orb/orb-core/corba-orb.c: make CORBA_Typecode_allocate
	non-static again.
	
2002-06-18  Murray Cumming  <murrayc@usa.net>

	* Restored the -lc++ command-line argument, lost during the merge.

2002-06-18  Murray Cumming  <murrayc@usa.net>

	* Reapplied Sam Couter's typecode patches, lost during the
	merge from head. These patches are now stored at
	murrayc.com/temp/orbit_cpp_patches/
	for easier merging in future.

2002-06-16  Murray Cumming  <murrayc@usa.net>

	* Merged with HEAD.

2002-05-16  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/pass_xlate.cc
	(exception_create_converters): Use get_method_prefix instead of
	get_typename for method implementations

2002-05-15  Diego Sevilla Ruiz  <dsevilla@um.es>

	* src/orb-cpp/orbitcpp_smartptr.hh: Again, conversion operators
	revised as for the suggestion of Kenneth Chiu
	<chiuk@cs.indiana.edu>. No warnings regarding operators.
	Also, added operator[] for all CORBA types which can be within an
	array index, just to avoid ambiguities. No warnings now.

2002-05-13  Diego Sevilla Ruiz  <dsevilla@um.es>

	* src/orb-cpp/orbitcpp_smartptr.hh: Generated correct conversion
	operators for ArrayVariable_var. In some cases, this causes gcc to
	show warnings, but these are normal (it happens the same in TAO,
	for example).

	* src/idl-compiler/cpp/types/IDLInterface.cc (member_pack_to_c):
	Use the .in() call explcitly to avoid g++2.95 fooling about the
	type conversion.

2002-05-13  Murray Cumming  <murrayc@usa.net>

	* test/cpp: Added Gergo's 2 sequences tests.
	
2002-05-13  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/orb-cpp/orbitcpp_sequence.hh: Release C buffers and mark new
	buffers to be released later by CORBA_free

2002-05-13  Murray Cumming  <murrayc@usa.net>

	* test/cpp: Added Gergo's structs tests. That's all of them now.

2002-05-13  Murray Cumming  <murrayc@usa.net>

	* Added more test/cpp/array tests from Gergo's tests. of_interface
	has a compile problem.

2002-05-12  Murray Cumming  <murrayc@usa.net>

	* test/cpp: Added arrays/inside_exception test, the first of
	Gergo's tests. Others should be able to follow the same autotools
	pattern.

2002-05-12  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/orb-cpp/orbitcpp_sequence.hh: delete buffer as array instead
	of simple pointer

	* src/idl-compiler/cpp/types/IDLInterface.cc (member_pack_to_c):
	Cast to a non-const reference instead of a non-const instance
	before duplicating _mgr's

2002-05-11  Diego Sevilla Ruiz  <dsevilla@pitagoras.dif.um.es>

	* src/idl-compiler/cpp/types/IDLStruct.cc (stub_impl_ret_post):
	Removed NOT from test of fixed length. The return value must be
	passed by value if it IS of fixed length.

2002-05-11  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/types/IDLType.hh: New method to get the
	seq_elem_traits class name for a given IDL type

	* src/idl-compiler/cpp/types/IDLSequence.cc: Getting the simplest
	of sequences to work

	* src/orb-cpp/orbitcpp_types.hh: Generate seq elem traits for
	built-in simple types

	* src/orb-cpp/orbitcpp_sequence.hh: Removed sequence traits from
	the design -- only element traits are used now, sequence traits
	are moved to virtual methods

	* src/idl-compiler/cpp/: Re-enabling random sequence-related stuff

2002-05-10  Diego Sevilla Ruiz  <dsevilla@um.es>

	* src/orb-cpp/orbitcpp_smartptr.hh: Changed ArrayVariable_var
	operator logic to allow compilation of tests

2002-05-06  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/types/IDLTypedef.cc
	(get_c_member_typename): return C typename instead of C++ typename
	of real type

2002-05-05  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/pass_xlate.cc: Create 'traits' classes, to
	be used by sequences

2002-05-03  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/orbit-idl-c-headers.c (ch_type_alloc_and_tc):
	Cast return value of _allocbuf here as well

	* src/idl-compiler/cpp/pass_skels.cc (doInterface): Use
	skel_method_prefix instead of skel_typename to cut leading '::'
	from class names

	* src/idl-compiler/cpp/pass_stubs.cc (doInterface): Use
	stub_method_prefix instead of stub_typename to cut leading '::'
	from class names

	* src/idl-compiler/cpp/pass_xlate.cc (IDLWriteArrayProps): Use
	"template<>" before template specializations, and use local
	type names instead of full, namespaced ID's.

	* src/idl-compiler/Makefile.am: Force C++ linking if C++ backend
	is to be included

2002-05-02  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/orbit-idl-c-headers.c (ch_prep_sequence): Cast
	return value of _allocbuf method to pointer to member type, to
	make typesafe C++ compilers happy

	* src/orb-cpp/orbitcpp_poa.cc: Use new Sequence packer/unpacker
	methods

	* src/orb-cpp/orbitcpp_smartptr.hh: Use new Sequence internal
	typenames

	* src/orb-cpp/orbitcpp_sequence.hh: Lots of memory allocation
	fixes -- generally, things Work now

	* src/idl-compiler/cpp/pass_xlate.cc: re-enabled a bunch of the Any
	container class generation

2002-04-30  Diego Sevilla Ruiz  <dsevilla@um.es>

	* src/idl-compiler/cpp/types/IDLElement.cc: Added <algorithm> to
	includes

	* src/idl-compiler/cpp/types/IDLScope.hh: Added <vector> to
	includes

2002-04-30  ERDI Gergo  <cactus@cactus.rulez.org>

	* src/idl-compiler/cpp/pass_xlate.cc (doInterface): 
	(doException): don't do --container.end() to get an iterator
	pointing to the last item, use a temporary instead

	* src/idl-compiler/cpp/types/IDLMethod.cc (skel_do_call): 
	(stub_arglist_get): ditto

	* src/orb-cpp/orbitcpp_poa.cc: Use new Sequence class

	* src/orb-cpp/orbitcpp_typecode.hh: Comment out *Member classes
	for now

	* src/orb-cpp/orbitcpp_sequence.hh: New implementation

2002-04-30  Diego Sevilla Ruiz  <dsevilla@um.es>

	* src/idl-compiler/cpp/types/IDLArray.cc (typedef_decl_write): 
	Changed non-compliant STL usage
