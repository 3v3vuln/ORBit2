dnl Process this file with autoconf to produce a configure script.
AC_INIT(configure.in)

AC_PREREQ(2.12) # required version of autoconf

LINC_MAJOR_VERSION=0
LINC_MINOR_VERSION=1
LINC_MICRO_VERSION=5
LINC_VERSION=$LINC_MAJOR_VERSION.$LINC_MINOR_VERSION.$LINC_MICRO_VERSION
AC_SUBST(LINC_MAJOR_VERSION)
AC_SUBST(LINC_MINOR_VERSION)
AC_SUBST(LINC_MICRO_VERSION)
AC_SUBST(LINC_VERSION)

# Before making a release, the LT_VERSION string should be modified.
# The string is of the form C:R:A.
# - If interfaces have been changed or added, but binary compatibility has
#   been preserved, change to C+1:0:A+1
# - If binary compatibility has been broken (eg removed or changed interfaces)
#   change to C+1:0:0
# - If the interface is the same as the previous version, change to C:R+1:A

LT_VERSION=0:0:0
AC_SUBST(LT_VERSION)

dnl --with-ssl-dir option
AC_ARG_WITH( ssl-dir, [  --with-ssl-dir=PATH     Specify path to OpenSSL installation ],
             ssl_dir="$withval", ssl_dir="" )

# For automake.

AM_CONFIG_HEADER(config.h)

dnl Initialize automake stuff
AM_INIT_AUTOMAKE(linc, $LINC_VERSION, no-define)

AM_PROG_LIBTOOL
AM_MAINTAINER_MODE

dnl Cache $ACLOCAL_FLAGS
AC_CACHE_CHECK([for aclocal flags], ac_cv_linc_aclocal_flags,[
   ac_cv_linc_aclocal_flags="$ACLOCAL_FLAGS"
])
ACLOCAL="$ACLOCAL $ac_cv_linc_aclocal_flags"

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL

dnl Checks for libraries.
PKG_CHECK_MODULES(LINC, glib-2.0 >= 1.3.2 gobject-2.0 >= 1.3.2 gthread-2.0 >= 1.3.2)
AC_SUBST(LINC_LIBS)
AC_SUBST(LINC_CFLAGS)

dnl Check for OpenSSL libraries
_save_ldflags="$LDFLAGS"

if test x$ssl_dir != x ; then
   LDFLAGS="$_save_ldflags -L$ssl_dir/lib"
fi

AC_CHECK_LIB(ssl,SSL_new,
             [ LINC_SSL_SUPPORT=1 
               SSL_LIBS="-lssl -lcrypto"
               if test x$ssl_dir != x ; then
                  SSL_LIBS="-L$ssl_dir/lib $SSL_LIBS"; 
                  SSL_CFLAGS="-I$ssl_dir/include" 
               fi ],,
             "-lcrypto")

LDFLAGS="$_save_ldflags"

LINC_SSL_SUPPORT=0
AC_SUBST(LINC_SSL_SUPPORT)
AC_SUBST(SSL_LIBS)
AC_SUBST(SSL_CFLAGS)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h unistd.h sys/endian.h endian.h machine/endian.h sys/machine.h sys/isa_defs.h sys/poll.h)
AC_CHECK_HEADERS(stddef.h wchar.h wcstr.h wctype.h machine/types.h)
AC_CHECK_HEADERS(netinet/in.h netinet/tcp.h sys/un.h linux/irda.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_CHECK_FUNCS(poll basename)
AC_CHECK_FUNC(socket,,[AC_CHECK_LIB(socket,socket)])
AC_CHECK_FUNC(gethostbyname,,[AC_CHECK_LIB(nsl,gethostbyname)])

# AC_CHECK_TYPE doesn't work here.
AC_MSG_CHECKING([for socklen_t])
AC_TRY_COMPILE(
  [#include <sys/types.h>
#include <sys/socket.h>],
  [socklen_t len;],
  [AC_MSG_RESULT(yes)],
  [AC_DEFINE(socklen_t, size_t)
   AC_MSG_RESULT(no)])

# Blatantly stolen from configure.in in the sample code from 
# "UNIX Network Programming, Volume 1" by W. Richard Stevens 
AC_CACHE_CHECK(if sockaddr has sa_len member,
ac_cv_sockaddr_has_sa_len,
        AC_TRY_COMPILE([
#               include <sys/types.h>
#               include <sys/socket.h>],
                [unsigned int i = sizeof(((struct sockaddr *)0)->sa_len)],
        ac_cv_sockaddr_has_sa_len=yes,
        ac_cv_sockaddr_has_sa_len=no))
if test x"$ac_cv_sockaddr_has_sa_len" = "xyes" ; then
        AC_DEFINE(HAVE_SOCKADDR_SA_LEN)
fi

AC_C_BIGENDIAN

AC_MSG_CHECKING(maximum number of iovecs for a writev)
AC_TRY_RUN([
#include <fcntl.h>
#include <sys/uio.h>
#include <stdio.h>
#include <unistd.h>
#define NIOVECS 2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2
int main(int argc, char *argv[])
{
	char dumbuf[20] = "\n";
	struct iovec iovecs[NIOVECS];
	int i,fd;
	FILE *f;

	for(i = 0; i < NIOVECS; i++) {
		iovecs[i].iov_base = dumbuf;
		iovecs[i].iov_len = 1;
	}

	f = fopen("conftestval", "w");
	fd=open("/dev/null", O_WRONLY);
	if(fd==-1)
		return(1);

	for(i = 1; i < NIOVECS; i *= 2)
		if(writev(fd, iovecs, i) < 0)
			break;
	fprintf(f, "%d\n", i);

	close(fd);
	fclose(f);
	return 0;
}
], WRITEV_IOVEC_LIMIT="`cat conftestval`", WRITEV_IOVEC_LIMIT=1024, WRITEV_IOVEC_LIMIT=1024)

AC_MSG_RESULT($WRITEV_IOVEC_LIMIT)
AC_DEFINE_UNQUOTED(WRITEV_IOVEC_LIMIT, $WRITEV_IOVEC_LIMIT)

AC_OUTPUT([
linc.pc
linc.spec
Makefile
src/Makefile
include/Makefile
include/linc/Makefile
include/linc/linc-config.h
linc-config
],[case "$CONFIG_FILES" in
*linc-config*) chmod +x linc-config;;
esac])
